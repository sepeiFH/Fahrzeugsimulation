//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FhMapDrawing.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockObjectContract", Namespace="http://schemas.datacontract.org/2004/07/Simulator.Simulation.WCFInterfaces")]
    [System.SerializableAttribute()]
    public partial class BlockObjectContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GID {
            get {
                return this.GIDField;
            }
            set {
                if ((this.GIDField.Equals(value) != true)) {
                    this.GIDField = value;
                    this.RaisePropertyChanged("GID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.SimulatorServiceMap")]
    public interface SimulatorServiceMap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SimulatorServiceMap/GetMap", ReplyAction="http://tempuri.org/SimulatorServiceMap/GetMapResponse")]
        string GetMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SimulatorServiceMap/GetMap", ReplyAction="http://tempuri.org/SimulatorServiceMap/GetMapResponse")]
        System.Threading.Tasks.Task<string> GetMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SimulatorServiceMap/GetDynamicObjects", ReplyAction="http://tempuri.org/SimulatorServiceMap/GetDynamicObjectsResponse")]
        FhMapDrawing.ServiceReference1.BlockObjectContract[] GetDynamicObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SimulatorServiceMap/GetDynamicObjects", ReplyAction="http://tempuri.org/SimulatorServiceMap/GetDynamicObjectsResponse")]
        System.Threading.Tasks.Task<FhMapDrawing.ServiceReference1.BlockObjectContract[]> GetDynamicObjectsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SimulatorServiceMapChannel : FhMapDrawing.ServiceReference1.SimulatorServiceMap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimulatorServiceMapClient : System.ServiceModel.ClientBase<FhMapDrawing.ServiceReference1.SimulatorServiceMap>, FhMapDrawing.ServiceReference1.SimulatorServiceMap {
        
        public SimulatorServiceMapClient() {
        }
        
        public SimulatorServiceMapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimulatorServiceMapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulatorServiceMapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulatorServiceMapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMap() {
            return base.Channel.GetMap();
        }
        
        public System.Threading.Tasks.Task<string> GetMapAsync() {
            return base.Channel.GetMapAsync();
        }
        
        public FhMapDrawing.ServiceReference1.BlockObjectContract[] GetDynamicObjects() {
            return base.Channel.GetDynamicObjects();
        }
        
        public System.Threading.Tasks.Task<FhMapDrawing.ServiceReference1.BlockObjectContract[]> GetDynamicObjectsAsync() {
            return base.Channel.GetDynamicObjectsAsync();
        }
    }
}
